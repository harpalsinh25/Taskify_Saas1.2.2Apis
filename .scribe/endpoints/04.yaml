name: 'Project Media'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/master-panel/projects/upload-media
    metadata:
      groupName: 'Project Media'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Upload media files to a specific project.'
      description: 'This endpoint allows uploading one or multiple media files associated with a project.'
      authenticated: false
      custom: []
    headers:
      Authorization: 'Bearer 40|dbscqcapUOVnO7g5bKWLIJ2H2zBM0CBUH218XxaNf548c4f1'
      Accept: application/json
      workspace_id: '2'
      Content-Type: multipart/form-data
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The ID of the project to attach media to.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'media_files[]':
        name: 'media_files[]'
        description: 'One or more files to upload (multipart/form-data).'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 15
    fileParameters:
      'media_files[]': null
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Media uploaded successfully.",
            "id": [6, 7],
            "data": [
              {
                "id": 6,
                "name": "maxresdefault",
                "file_name": "maxresdefault.jpg",
                "file_size": 72106,
                "file_type": "image/jpeg",
                "created_at": "2025-06-02",
                "updated_at": "2025-06-02"
              },
              {
                "id": 7,
                "name": "screenshot",
                "file_name": "screenshot.png",
                "file_size": 45000,
                "file_type": "image/png",
                "created_at": "2025-06-02",
                "updated_at": "2025-06-02"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "error": true,
            "message": "No file(s) chosen."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "The given data was invalid.",
            "errors": {
              "media_files.0": ["The media files.0 may not be greater than 2048 kilobytes."],
              "id": ["The selected id is invalid."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Project could not be created.",
            "error": "Detailed exception message here",
            "line": 123,
            "file": "/path/to/file.php"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/master-panel/media/{id}'
    metadata:
      groupName: 'Project Media'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a single media file by ID.'
      description: 'Deletes a media file record and its associated file from storage.'
      authenticated: false
      custom: []
    headers:
      Authorization: 'Bearer 40|dbscqcapUOVnO7g5bKWLIJ2H2zBM0CBUH218XxaNf548c4f1'
      Accept: application/json
      workspace_id: '2'
      Content-Type: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the medium.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      mediaId:
        name: mediaId
        description: 'The ID of the media file to delete.'
        required: true
        example: 101
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
      mediaId: 101
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "File deleted successfully.",
            "id": 101,
            "title": "example.jpg",
            "parent_id": 15,
            "type": "media",
            "parent_type": "project"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "File not found."
          }
        headers: []
        description: 'Media Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/master-panel/media/delete-multiple
    metadata:
      groupName: 'Project Media'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete multiple media files by their IDs.'
      description: 'Accepts an array of media IDs to delete multiple media files in a single request.'
      authenticated: false
      custom: []
    headers:
      Authorization: 'Bearer 40|dbscqcapUOVnO7g5bKWLIJ2H2zBM0CBUH218XxaNf548c4f1'
      Accept: application/json
      workspace_id: '2'
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'Array of media IDs to delete.'
        required: true
        example:
          - 101
          - 102
          - 103
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'ids.*':
        name: 'ids.*'
        description: 'Each media ID must exist in the media table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      ids:
        - 101
        - 102
        - 103
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Files(s) deleted successfully.",
            "id": [101, 102],
            "titles": ["example1.jpg", "example2.png"],
            "parent_id": [15, 15],
            "type": "media",
            "parent_type": "project"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "ids": [
                "The ids field is required."
              ],
              "ids.0": [
                "The selected ids.0 is invalid."
              ]
            }
          }
        headers: []
        description: 'Validation Error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
