name: 'Todos Managemant'
description: |-
  Updates a specific Todo item based on the provided ID and new data.
  Requires the `id`, `title`, and `priority` fields in the request.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/master-panel/todo
    metadata:
      groupName: 'Todos Managemant'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new Todo item.'
      description: 'This endpoint creates a new todo item associated with the current workspace and admin.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the todo item.'
        required: true
        example: '"Finish report"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      priority:
        name: priority
        description: 'The priority level of the todo.'
        required: true
        example: '"High"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'nullable Optional detailed description of the todo.'
        required: false
        example: '"Complete the monthly sales report."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: '"Finish report"'
      priority: '"High"'
      description: '"Complete the monthly sales report."'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Todo created successfully.",
            "data": {
              "id": 1,
              "title": "Finish report",
              "priority": "High",
              "description": "Complete the monthly sales report.",
              "workspace_id": 5,
              "admin_id": 3,
              "created_at": "2025-06-05 10:00:00",
              "updated_at": "2025-06-05 10:00:00"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Workspace not found in session.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation error.",
            "errors": {
              "title": ["The title field is required."],
              "priority": ["The priority field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Lead Couldn't Created.",
            "error": "SQLSTATE[23000]: Integrity constraint violation: 1452 Cannot add or update a child row",
            "line": 45,
            "file": "/var/www/html/app/Http/Controllers/TodoController.php"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/master-panel/todo/{id}'
    metadata:
      groupName: 'Todos Managemant'
      groupDescription: |-
        Updates a specific Todo item based on the provided ID and new data.
        Requires the `id`, `title`, and `priority` fields in the request.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing Todo'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The ID of the Todo to update.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      title:
        name: title
        description: 'The updated title for the Todo.'
        required: true
        example: 'Complete Report'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      priority:
        name: priority
        description: 'The updated priority level.'
        required: true
        example: High
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The updated description for the Todo (optional).'
        required: false
        example: 'Submit final version to manager'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      isApi:
        name: isApi
        description: 'Whether the request is from API.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 5
      title: 'Complete Report'
      priority: High
      description: 'Submit final version to manager'
      isApi: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Todo updated successfully.",
            "data": {
              "id": 5,
              "data": {
                "id": 5,
                "title": "Complete Report",
                "priority": "High",
                "description": "Submit final version to manager",
                "workspace_id": 2,
                "admin_id": 1,
                "created_at": "2025-06-05 14:45:23",
                "updated_at": "2025-06-06 10:12:45"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "No query results for model [App\\Models\\Todo] 999."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "The given data was invalid.",
            "errors": {
              "title": ["The title field is required."],
              "priority": ["The priority field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Todo couldn't be updated.",
            "data": {
              "error": "Error message details...",
              "line": 45,
              "file": "/app/Http/Controllers/TodoController.php"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/master-panel/todo/{id}'
    metadata:
      groupName: 'Todos Managemant'
      groupDescription: 'This endpoint will delete a Todo from the database. It returns a success response if the deletion was successful, or appropriate error messages otherwise.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a Todo'
      description: 'Deletes a specific todo item by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo to delete.'
        required: true
        example: 42
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 42
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Todo deleted successfully.",
            "data": {
              "id": 42,
              "title": "Call client",
              "priority": "High",
              "description": "Discuss contract terms",
              "created_at": "2025-06-05T12:00:00Z",
              "updated_at": "2025-06-05T14:00:00Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Todo not found.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "An error occurred while deleting Todo.",
            "data": {
              "error": "SQLSTATE[23000]: Integrity constraint violation: ...",
              "line": 88,
              "file": "/app/Http/Controllers/TodoController.php"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/master-panel/todo/{id?}'
    metadata:
      groupName: 'Todos Managemant'
      groupDescription: |-
        This endpoint returns all todos for the current workspace with optional filtering,
        sorting, and pagination. If an ID is provided, it returns the specific todo.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of todos or a specific todo by ID.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the .'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters:
      isApi:
        name: isApi
        description: 'Optional. Defaults to true. Set to true to receive API formatted response.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'Optional. If provided, fetch a specific todo by this ID.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Optional. Search term to filter todos by title or description.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Optional. Column name to sort by. Default: id.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 'Optional. Sort order: asc or desc. Default: desc.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Optional. Number of items per page for pagination. Default: 10.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      isApi: false
      id: 17
      search: consequatur
      sort: consequatur
      order: consequatur
      limit: 17
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Todos retrieved successfully.",
            "total": 25,
            "data": [
              {
                "id": 1,
                "title": "Sample Todo",
                "description": "Description here",
                "priority": "High",
                "is_completed": false,
                "creator": {
                  "id": 2,
                  "first_name": "John",
                  "last_name": "Doe"
                },
                "created_at": "2025-06-05 10:00:00",
                "updated_at": "2025-06-05 10:30:00"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Todo not found.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Internal Server Error",
            "data": {
              "line": 123,
              "file": "/app/Http/Controllers/TodoController.php"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
