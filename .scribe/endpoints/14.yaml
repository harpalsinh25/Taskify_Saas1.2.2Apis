name: 'Client Management'
description: |-
  This endpoint deletes a specific client by their ID.
  It removes the client from the database along with all their associated todos,
  and uses a reusable deletion service for standardized deletion handling.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/master-panel/clients/{id?}'
    metadata:
      groupName: 'Client Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        List or Retrieve Clients

        This endpoint is used to retrieve a list of all clients for the current workspace,
        or a single client if an ID is provided. It supports searching, sorting, and pagination.

        Requires a `workspace_id` header to identify the current workspace context.
      description: ''
      authenticated: false
      custom: []
    headers:
      workspace_id: 'required The workspace ID to filter clients by.'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Optional. The ID of the client to retrieve. If not provided, a paginated list of clients will be returned.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters:
      isApi:
        name: isApi
        description: 'Optional. Indicates if the request is from an API context. Default: false.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Optional. Search clients by first name, last name, company, email, or phone.'
        required: false
        example: john
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Optional. Field to sort by. Default: id.'
        required: false
        example: first_name
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order:
        name: order
        description: 'Optional. Sort direction: ASC or DESC. Default: DESC.'
        required: false
        example: ASC
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Optional. Number of clients per page. Default: 10.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      isApi: true
      search: john
      sort: first_name
      order: ASC
      limit: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": false,
            "message": "Clients retrieved successfully",
            "data": {
              "total": 2,
              "data": [
                {
                  "id": 1,
                  "first_name": "John",
                  "last_name": "Doe",
                  "email": "john@example.com",
                  "company": "Acme Inc",
                  ...
                }
              ],
              "pagination": {
                "current_page": 1,
                "last_page": 1,
                "per_page": 10,
                "total": 2
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "error": "Workspace ID header missing"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "Client not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": true,
            "message": "Client couldn't be retrieved.",
            "data": {
              "error": "Detailed error message",
              "line": 123,
              "file": "path/to/file.php"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/master-panel/clients
    metadata:
      groupName: 'Client Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new client.'
      description: |-
        This endpoint is used to create a new client, either for internal purposes or for general usage.
        The client can be created with optional email verification and notification settings.
        The request must include a `workspace-id` in the headers to identify which workspace the client belongs to.
      authenticated: false
      custom: []
    headers:
      workspace-id: 'required The ID of the workspace in which to create the client. Example: 5'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first name of the client.'
        required: true
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the client.'
        required: true
        example: Doe
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      company:
        name: company
        description: 'The company name of the client.'
        required: false
        example: 'Acme Corp'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address of the client. Must be unique.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'The phone number of the client.'
        required: false
        example: '1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      country_code:
        name: country_code
        description: 'The phone country code.'
        required: false
        example: '+1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'required_if:internal_purpose,off The password for the client (min 6 characters). Required unless internal_purpose is on.'
        required: false
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Same as password. Required if password is present.'
        required: false
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address:
        name: address
        description: 'The address of the client.'
        required: false
        example: '123 Main St'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      city:
        name: city
        description: 'The city of the client.'
        required: false
        example: 'New York'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      state:
        name: state
        description: 'The state of the client.'
        required: false
        example: NY
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      country:
        name: country
        description: 'The country of the client.'
        required: false
        example: USA
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      zip:
        name: zip
        description: 'The ZIP/postal code.'
        required: false
        example: '10001'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      dob:
        name: dob
        description: 'The date of birth in the configured date format.'
        required: false
        example: '1990-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      doj:
        name: doj
        description: 'The date of joining in the configured date format.'
        required: false
        example: '2023-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      country_iso_code:
        name: country_iso_code
        description: 'ISO country code.'
        required: false
        example: US
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      internal_purpose:
        name: internal_purpose
        description: 'Whether the client is for internal purpose only.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      require_ev:
        name: require_ev
        description: 'Should email verification be required. Only applicable if user has permission.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Should the client be activated immediately. Only applicable if user has permission.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      example:
        name: example
        description: |-
          "first_name": "John",
            "last_name": "Doe",
            "company": "Acme Corp",
            "email": "john@example.com",
            "phone": "1234567890",
            "country_code": "+1",
            "password": "password123",
            "password_confirmation": "password123",
            "address": "123 Main St",
            "city": "New York",
            "state": "NY",
            "country": "USA",
            "zip": "10001",
            "dob": "1990-01-01",
            "doj": "2023-01-01",
            "country_iso_code": "US",
            "internal_purpose": "on",
            "require_ev": 0,
            "status": 1
          }
        required: false
        example: consequatur
        type: '{'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      first_name: John
      last_name: Doe
      company: 'Acme Corp'
      email: john@example.com
      phone: '1234567890'
      country_code: '+1'
      password: password123
      password_confirmation: password123
      address: '123 Main St'
      city: 'New York'
      state: NY
      country: USA
      zip: '10001'
      dob: '1990-01-01'
      doj: '2023-01-01'
      country_iso_code: US
      internal_purpose: true
      require_ev: false
      status: true
      example: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Client created successfully.",
            "data": {
              "id": 23,
              "first_name": "John",
              "last_name": "Doe",
              ...
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "error": true,
            "message": "Invalid or missing workspace.",
            "workspace_id": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "The email has already been taken in users or clients.",
            "errors": {
              "email": ["The email has already been taken in users or clients."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Client could not be created.",
            "error": "Exception message here",
            "line": 120,
            "file": "ClientController.php"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/master-panel/clients/{client}'
    metadata:
      groupName: 'Client Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update client details.'
      description: |-
        Updates the specified client's information. Handles password updates,
        profile photo upload, email verification logic, and account creation emails.
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      client:
        name: client
        description: 'The client.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the client to update.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      client: consequatur
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: "Client's first name."
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: "Client's last name."
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      company:
        name: company
        description: "nullable Client's company name."
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Unique client email.'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'nullable Client phone number.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      country_code:
        name: country_code
        description: 'nullable Country code.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'nullable Password (required if client has no password and internal_purpose is off).'
        required: false
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'required_with:password Must match password.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: 'nullable Client address.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      city:
        name: city
        description: 'nullable Client city.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      state:
        name: state
        description: 'nullable Client state.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      country:
        name: country
        description: 'nullable Client country.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      zip:
        name: zip
        description: 'nullable Postal/zip code.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      dob:
        name: dob
        description: 'nullable Date of birth.'
        required: false
        example: consequatur
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      doj:
        name: doj
        description: 'nullable Date of joining.'
        required: false
        example: consequatur
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      country_iso_code:
        name: country_iso_code
        description: 'nullable ISO code for country.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      internal_purpose:
        name: internal_purpose
        description: "nullable Set to 'on' for internal clients (password can be nullable)."
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'nullable Client status.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      require_ev:
        name: require_ev
        description: 'nullable Email verification required flag (0 or 1).'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      upload:
        name: upload
        description: 'nullable Profile photo file upload.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      first_name: consequatur
      last_name: consequatur
      company: consequatur
      email: qkunze@example.com
      phone: consequatur
      country_code: consequatur
      password: 'O[2UZ5ij-e/dl4m{o,'
      password_confirmation: consequatur
      address: consequatur
      city: consequatur
      state: consequatur
      country: consequatur
      zip: consequatur
      dob: consequatur
      doj: consequatur
      country_iso_code: consequatur
      internal_purpose: consequatur
      status: 17
      require_ev: 17
    fileParameters:
      upload: null
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message":Client updated successfully,
           "data[
          data of the client ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "email": [
                "The email has already been taken in users or clients."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "An unexpected error occurred while updating client details."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/master-panel/clients/{id}'
    metadata:
      groupName: 'Client Management'
      groupDescription: |-
        This endpoint deletes a specific client by their ID.
        It removes the client from the database along with all their associated todos,
        and uses a reusable deletion service for standardized deletion handling.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a client.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the client.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      client:
        name: client
        description: 'The ID of the client to delete.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
      client: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Client deleted successfully.",
            "id": 28,
            "title": "hrdeep Raa",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Client not found.",
            "error": "No query results for model [App\\Models\\Client] 15"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Client could not be deleted.",
            "error": "Exception message",
            "line": 123,
            "file": "path/to/file"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/master-panel/destroy-multiple-clients
    metadata:
      groupName: 'Client Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete multiple clients.'
      description: 'Deletes multiple clients by their IDs along with their associated todos.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'An array of client IDs to delete.'
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'ids.*':
        name: 'ids.*'
        description: 'Each client ID must exist in the clients table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      ids:
        - 1
        - 2
        - 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Clients(s) deleted successfully.",
            "id": [1, 2, 3],
            "titles": ["John Doe", "Jane Smith", "Alice Johnson"]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Client not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "ids": ["The ids field is required."],
              "ids.0": ["The selected ids.0 is invalid."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
