## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Authentication'
description: 'This endpoint allows a user or client to authenticate using email and password. It applies rate limiting and returns a Bearer token upon successful login.'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: 'User Authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a New User'
      description: |-
        This endpoint allows a user to register by providing first name, last name, email, password, confirm password, and phone number.
        On success, it returns the user data along with an access token.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: "The user's first name."
        required: true
        example: harpalsinh
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: "The user's last name."
        required: true
        example: sarvaiya
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address. Must be unique."
        required: true
        example: harpalsinh@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'Must match the regex /^\d+$/.'
        required: true
        example: '1562'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password. Minimum 6 characters."
        required: true
        example: password
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      confirm_password:
        name: confirm_password
        description: 'Must match the password field.'
        required: true
        example: password
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone_number:
        name: phone_number
        description: "The user's phone number."
        required: true
        example: '+1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      first_name: harpalsinh
      last_name: sarvaiya
      email: harpalsinh@gmail.com
      phone: '1562'
      password: password
      password_confirmation: consequatur
      confirm_password: password
      phone_number: '+1234567890'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": true,
            "message": "Registration successful.",
            "data": {
              "user": {
                "id": 1,
                "first_name": "harpalsinh",
                "last_name": "sarvaiya",
                "email": "harpalsinh@gmail.com",
                "phone_number": "+1234567890"
              },
              "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": false,
            "message": "The given data was invalid.",
            "errors": {
              "first_name": ["The first name field is required."],
              "last_name": ["The last name field is required."],
              "email": ["The email has already been taken."],
              "password": ["The password must be at least 6 characters."],
              "confirm_password": ["The confirm password and password must match."],
              "phone_number": ["The phone number field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": false,
            "message": "Something went wrong. Please try again later."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: 'User Authentication'
      groupDescription: 'This endpoint allows a user or client to authenticate using email and password. It applies rate limiting and returns a Bearer token upon successful login.'
      subgroup: ''
      subgroupDescription: ''
      title: login
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the account.'
        required: true
        example: admin@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password for the account.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: admin@gmail.com
      password: '123456'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "User login successful",
            "access_token": "1|X1Y2Z3TOKENEXAMPLE",
            "token_type": "Bearer",
            "account_type": "user",
            "role": "admin",
            "user": {
              "id": 1,
              "name": "John Doe",
              "email": "johndoe@example.com",
              ...
            },
            "redirect_url": "http://yourapp.com/workspaces/edit/1"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": true,
            "message": "Invalid credentials. Please try again."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": ["The email field is required."],
              "password": ["The password field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 429
        content: |-
          {
            "error": true,
            "message": "Too many login attempts. Please try again in 60 seconds."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "An unexpected error occurred. Please try again later."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/forgot-password
    metadata:
      groupName: 'User Authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send Password Reset Link'
      description: |-
        This endpoint sends a password reset link to the given email address
        if it belongs to a registered user or client.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the user or client.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: user@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Password reset link emailed successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "The given data was invalid.",
            "errors": {
              "email": [
                "The email field is required."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Password reset link couldn't be sent, please check email settings."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Password reset link couldn't be sent, please configure email settings."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
