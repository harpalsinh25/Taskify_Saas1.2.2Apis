## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Task Media'
description: |-
  Upload one or more media files to an existing task using its ID. The uploaded files will be stored
  in the `task-media` media collection using Spatie MediaLibrary. This endpoint accepts multiple files.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/master-panel/tasks/upload-media
    metadata:
      groupName: 'Task Media'
      groupDescription: |-
        Upload one or more media files to an existing task using its ID. The uploaded files will be stored
        in the `task-media` media collection using Spatie MediaLibrary. This endpoint accepts multiple files.
      subgroup: ''
      subgroupDescription: ''
      title: 'Upload media files to a task.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The ID of the task to which the files should be uploaded.'
        required: true
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      media_files:
        name: media_files
        description: 'The media files to upload. Must be provided as an array of files.'
        required: true
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 25
    fileParameters:
      media_files:
        - null
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "File(s) uploaded successfully.",
            "id": [15, 16],
            "type": "media",
            "parent_type": "task",
            "parent_id": 25
          }
        headers: []
        description: Success
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "No file(s) chosen."
          }
        headers: []
        description: 'No files uploaded'
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "id": ["The selected id is invalid."]
            }
          }
        headers: []
        description: 'Missing or invalid task ID'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/master-panel/tasks/{id}/media'
    metadata:
      groupName: 'Task Media'
      groupDescription: 'Returns a list of media files associated with a specific task. Supports optional searching and sorting.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get task media list.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task to get media for.'
        required: true
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 25
    queryParameters:
      search:
        name: search
        description: 'Optional search term to filter by file name, ID, or creation date.'
        required: false
        example: image
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Field to sort by. Default is `id`.'
        required: false
        example: file_name
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order:
        name: order
        description: 'Sorting direction: `asc` or `desc`. Default is `desc`.'
        required: false
        example: asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: image
      sort: file_name
      order: asc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "rows": [
              {
                "id": 16,
                "file": "<a href=\"http://localhost:8000/storage/task-media/hmgoepprod.jpg\" data-lightbox=\"task-media\"><img src=\"http://localhost:8000/storage/task-media/hmgoepprod.jpg\" alt=\"hmgoepprod.jpg\" width=\"50\"></a>",
                "file_name": "hmgoepprod.jpg",
                "file_size": "67.54 KB",
                "created_at": "2025-06-04",
                "updated_at": "2025-06-04",
                "actions": "<a href=\"http://localhost:8000/storage/task-media/hmgoepprod.jpg\" title=\"Download\" download><i class=\"bx bx-download bx-sm\"></i></a><button title=\"Delete\" type=\"button\" class=\"btn delete\" data-id=\"16\" data-type=\"task-media\" data-table=\"task_media_table\"><i class=\"bx bx-trash text-danger\"></i></button>"
              }
            ],
            "total": 2
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/master-panel/tasks/media/{id}'
    metadata:
      groupName: 'Task Media'
      groupDescription: 'Deletes a specific media file associated with a task using its media ID. This removes the file from both the database and the storage disk.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a media file from a task.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the medium.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      mediaId:
        name: mediaId
        description: 'The ID of the media file to delete.'
        required: true
        example: 45
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
      mediaId: 45
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "File deleted successfully.",
            "id": 45,
            "title": "example-file.pdf",
            "parent_id": 23,
            "type": "media",
            "parent_type": "task"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "File not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
