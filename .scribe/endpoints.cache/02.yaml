## Autogenerated by Scribe. DO NOT MODIFY.

name: Dashboard
description: |-
  Retrieves a paginated list of users who have work anniversaries (based on their date of joining) within a specified number of upcoming days.
  This endpoint supports filtering, sorting, searching, and pagination.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/master-panel/dashboardList
    metadata:
      groupName: Dashboard
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Dashboard Data'
      description: |-
        This endpoint returns a comprehensive dashboard summary for the authenticated user within the selected workspace.
        It includes counts and detailed lists of users, clients, projects, tasks, to-dos, meetings, activities, and statuses.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 40|dbscqcapUOVnO7g5bKWLIJ2H2zBM0CBUH218XxaNf548c4f1'
      Accept: application/json
      workspace_id: '2'
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Dashboard data fetched successfully.",
            "data": {
              "counts": {
                "users_count": 5,
                "clients_count": 3,
                "projects_count": 8,
                "tasks_count": 22,
                "todos_count": 5,
                "meetings_count": 2,
                "statuses_count": 6,
                "activities_count": 10
              },
              "users": [...],
              "clients": [...],
              "projects": [...],
              "tasks": [...],
              "todos": [...],
              "total_todos": [...],
              "meetings": [...],
              "auth_user": {
                "id": 1,
                "first_name": "John",
                "last_name": "Doe",
                ...
              },
              "statuses": [...],
              "activities": [...]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "error": true,
            "message": "Missing or invalid workspace-id header.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": true,
            "message": "Unauthorized: User not authenticated.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Workspace not found.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Something went wrong.",
            "data": {
              "line": 123,
              "file": "app/Http/Controllers/DashboardController.php",
              "error": "Exception message here"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/master-panel/upcoming-birthdays
    metadata:
      groupName: Dashboard
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Upcoming Birthdays'
      description: |-
        This endpoint retrieves a list of users within the current workspace whose birthdays are coming up within the next given number of days (default is 30).
        It calculates the number of days left for each birthday and includes user details like name, photo, age, and profile link.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 40|dbscqcapUOVnO7g5bKWLIJ2H2zBM0CBUH218XxaNf548c4f1'
      Accept: application/json
      workspace_id: '2'
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      upcoming_days:
        name: upcoming_days
        description: 'Optional. Number of upcoming days to look for birthdays. Defaults to 30.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      isApi:
        name: isApi
        description: 'Optional. Pass true to get formatted API response.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      upcoming_days: 15
      isApi: true
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Upcoming birthdays fetched successfully.",
            "data": {
              "data": [
                {
                  "id": 5,
                  "member": "John Doe",
                  "dob": "1995-07-18",
                  "days_left": 12,
                  "age": 28,
                  "photo": "http://example.com/storage/photos/user5.jpg",
                  "profile_url": "http://example.com/users/5"
                }
              ],
              "total": 1
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Internal Server Error: Something went wrong.",
            "data": [],
            "status_code": 500
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/master-panel/upcoming-work-anniversaries
    metadata:
      groupName: Dashboard
      groupDescription: |-
        Retrieves a paginated list of users who have work anniversaries (based on their date of joining) within a specified number of upcoming days.
        This endpoint supports filtering, sorting, searching, and pagination.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Upcoming Work Anniversaries'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 40|dbscqcapUOVnO7g5bKWLIJ2H2zBM0CBUH218XxaNf548c4f1'
      Accept: application/json
      workspace_id: '2'
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'Optional. Search term to filter users by first name, last name, full name, or date of joining.'
        required: false
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Optional. Field to sort by. Default is "doj".'
        required: false
        example: doj
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order:
        name: order
        description: 'Optional. Sort order: ASC or DESC. Default is "ASC".'
        required: false
        example: ASC
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      upcoming_days:
        name: upcoming_days
        description: 'Optional. Number of upcoming days to check. Default is 30.'
        required: false
        example: 30
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'Optional. Filter by a specific user ID.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Optional. Number of results per page. Default is 15.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: John
      sort: doj
      order: ASC
      upcoming_days: 30
      user_id: 15
      limit: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "rows": [
              {
                "id": 1,
                "member": "Alice Smith ðŸ¥³<ul class='list-unstyled users-list m-0 avatar-group d-flex align-items-center'><a href='http://example.com/users/1' target='_blank'><li class='avatar avatar-sm pull-up' title='Alice Smith'><img src='http://example.com/storage/photos/alice.jpg' alt='Avatar' class='rounded-circle'>",
                "wa_date": "2025-05-19 <span class='badge bg-success'>Today</span>",
                "days_left": 0
              }
            ],
            "total": 25
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "order": ["The selected order is invalid. Must be ASC or DESC."],
              "sort": ["The selected sort field is invalid."],
              "upcoming_days": ["The upcoming_days must be an integer."],
              "limit": ["The limit must be a positive integer."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": false,
            "message": "Internal server error. Please try again later."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/master-panel/members-on-leave
    metadata:
      groupName: Dashboard
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Members on Leave (Filtered & Paginated)'
      description: |-
        Returns a paginated list of users who are currently on leave or scheduled to be on leave
        within a specified number of upcoming days. Supports filtering by search term, sorting,
        user ID, and respects permission-based visibility for the requesting user.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 40|dbscqcapUOVnO7g5bKWLIJ2H2zBM0CBUH218XxaNf548c4f1'
      Accept: application/json
      workspace_id: '2'
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'Optional. Search by first name or last name.'
        required: false
        example: Jane
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Optional. Field to sort by. Default is `from_date`.'
        required: false
        example: from_date
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order:
        name: order
        description: 'Optional. Sort direction. Must be "ASC" or "DESC". Default is "ASC".'
        required: false
        example: DESC
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      upcoming_days:
        name: upcoming_days
        description: 'Optional. Number of upcoming days to include. Default is 30.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'Optional. Filter by a specific user ID.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Optional. Number of records per page. Default is 15.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: Jane
      sort: from_date
      order: DESC
      upcoming_days: 15
      user_id: 5
      limit: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "rows": [
              {
                "id": 12,
                "member": "John Doe <ul class='list-unstyled users-list ...'>...</ul>",
                "from_date": "Mon, May 20, 2025",
                "to_date": "Tue, May 21, 2025",
                "type": "<span class='badge bg-primary'>Full</span>",
                "duration": "2 days",
                "days_left": 1
              }
            ],
            "total": 15
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "order": ["The selected order is invalid. Allowed values are ASC or DESC."],
              "sort": ["The selected sort field is invalid."],
              "upcoming_days": ["The upcoming_days must be an integer."],
              "limit": ["The limit must be a positive integer."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "status": false,
            "message": "Internal server error. Please try again later."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
